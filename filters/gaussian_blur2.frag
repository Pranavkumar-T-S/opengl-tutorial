#include<iostream>
std::string fragmentShader=
"#version 400\n"
"in vec2 texCoord;\n"
"out vec4 color;\n"
"uniform float sigma=1;\n"
"uniform sampler2D texture1;\n"
"void main()\n"
"{\n"
    "ivec2 ksize=2*ivec2(3.*sigma*vec2(textureSize(texture1,0)))+1;\n"
    "vec2 density=1./textureSize(texture1,0);\n"
    "float x,y,acc=0,weight;\n"
    "int i,j;\n"
    "vec4 sum=vec4(0.f);\n"
    "for(i=-(ksize.x-1)/2;i<=(ksize.x-1)/2;i++)\n"
    "{\n"
        "for(j=-(ksize.y-1)/2;j<=(ksize.y-1)/2;j++)\n"
        "{\n"
            "x=i*density.x;\n"
            "y=j*density.y;\n"
            "weight=texCoord.x+x<0||texCoord.x+x>1||texCoord.y+y<0||texCoord.y+y>1?0:(.1591/sigma/sigma*exp(-((x*x+y*y)/2/sigma/sigma)));\n"
            "acc+=weight;\n"
            "sum+=weight*texture(texture1,vec2(texCoord.x+x,texCoord.y+y));\n"
        "}\n"
    "}\n"
    "color=sigma<=.00001?texture(texture1,texCoord):sum/acc;\n"
"}\n";